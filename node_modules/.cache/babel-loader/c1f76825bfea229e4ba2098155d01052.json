{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\blockchain\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\blockchain\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\blockchain\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\blockchain\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Tether from \"../truffle_abis/Tether.json\";\nimport RWD from \"../truffle_abis/RWD.json\";\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\nimport Loader from \"./Loader\";\nimport Main from \"./Main\";\nimport ParticleSettings from './ParticleSettings';\n\nvar App = function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tether = _useState4[0],\n      setTether = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rwd = _useState6[0],\n      setRwd = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      decentralBank = _useState8[0],\n      setDecentralBank = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tetherBalance = _useState10[0],\n      setTetherBal = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rwdBalance = _useState12[0],\n      setRwdBal = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      stackingBalance = _useState14[0],\n      setStackingBal = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"System has no MetaMask\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadWeb3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getAccount = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, acc, networkId, tetherData, teth, tetherBal, rwdData, _rwd, rwdBal, DecentralBankData, _decentralBank, stackingBal;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = window.web3;\n              _context2.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              acc = _context2.sent;\n              setAccount(acc[0]);\n              console.log(acc);\n              _context2.next = 8;\n              return web3.eth.net.getId();\n\n            case 8:\n              networkId = _context2.sent;\n              // Loading Tether\n              tetherData = Tether.networks[networkId];\n\n              if (!tetherData) {\n                _context2.next = 19;\n                break;\n              }\n\n              teth = new web3.eth.Contract(Tether.abi, tetherData.address);\n              setTether(teth);\n              _context2.next = 15;\n              return teth.methods.balances(acc[0]).call();\n\n            case 15:\n              tetherBal = _context2.sent;\n              setTetherBal(tetherBal);\n              _context2.next = 20;\n              break;\n\n            case 19:\n              window.alert(\"contract not deployed\");\n\n            case 20:\n              //Loading RWD\n              rwdData = RWD.networks[networkId];\n\n              if (!rwdData) {\n                _context2.next = 31;\n                break;\n              }\n\n              _rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n              setRwd(_rwd);\n              _context2.next = 26;\n              return _rwd.methods.balances(acc[0]).call();\n\n            case 26:\n              rwdBal = _context2.sent;\n              setRwdBal(rwdBal);\n              console.log(rwdBal.toString());\n              _context2.next = 32;\n              break;\n\n            case 31:\n              window.alert(\"RWD not deployed\");\n\n            case 32:\n              //Loading DecentralBank\n              DecentralBankData = DecentralBank.networks[networkId];\n\n              if (!DecentralBankData) {\n                _context2.next = 43;\n                break;\n              }\n\n              _decentralBank = new web3.eth.Contract(DecentralBank.abi, DecentralBankData.address);\n              setDecentralBank(_decentralBank);\n              _context2.next = 38;\n              return _decentralBank.methods.stackingBalance(acc[0]).call();\n\n            case 38:\n              stackingBal = _context2.sent;\n              setStackingBal(stackingBal);\n              console.log(stackingBal);\n              _context2.next = 44;\n              break;\n\n            case 43:\n              window.alert(\"DecentralBank not deployed\");\n\n            case 44:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getAccount() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return loadWeb3();\n\n          case 2:\n            _context3.next = 4;\n            return getAccount();\n\n          case 4:\n            setTimeout(function () {\n              setLoading(false);\n            }, 5000);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })), []);\n\n  var stake = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(amount) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              loading(true);\n              _context5.next = 3;\n              return tether.methods.approve(decentralBank._address, amount).send({\n                from: account\n              }).on('transactionHash', /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(hash) {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return decentralBank.methods.depositTokens(amount).send({\n                            from: account\n                          }).on('transactionHash', function (hash) {\n                            loading(false);\n                          });\n\n                        case 2:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x2) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function stake(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ParticleSettings, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    style: {\n      maxWidth: '100%',\n      minHeight: '100vm'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    account: account,\n    stackingBalance: stackingBalance,\n    rwdBalance: rwdBalance,\n    tetherBalance: tetherBalance,\n    stake: stake,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/blockchain/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","useEffect","useState","Web3","Tether","RWD","DecentralBank","Loader","Main","ParticleSettings","App","account","setAccount","tether","setTether","rwd","setRwd","decentralBank","setDecentralBank","tetherBalance","setTetherBal","rwdBalance","setRwdBal","stackingBalance","setStackingBal","loading","setLoading","loadWeb3","window","ethereum","web3","enable","currentProvider","alert","getAccount","eth","getAccounts","acc","console","log","net","getId","networkId","tetherData","networks","teth","Contract","abi","address","methods","balances","call","tetherBal","rwdData","rwdBal","toString","DecentralBankData","stackingBal","setTimeout","stake","amount","approve","_address","send","from","on","hash","depositTokens","position","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Tether from \"../truffle_abis/Tether.json\";\r\nimport RWD from \"../truffle_abis/RWD.json\";\r\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\r\nimport Loader from \"./Loader\";\r\nimport Main from \"./Main\";\r\nimport ParticleSettings from './ParticleSettings'\r\n\r\nconst App=()=>{\r\n    const [account,setAccount]=useState(\"\");\r\n    const [tether,setTether]=useState({});\r\n    const [rwd,setRwd]=useState({});\r\n    const [decentralBank,setDecentralBank]=useState({});\r\n    const [tetherBalance,setTetherBal]=useState(\"\");\r\n    const [rwdBalance,setRwdBal]=useState(\"\");\r\n    const [stackingBalance,setStackingBal]=useState(\"\");\r\n    const [loading,setLoading]=useState(true);\r\n        const loadWeb3=async()=>{\r\n        if(window.ethereum){\r\n            window.web3= new Web3(window.ethereum);\r\n            await window.ethereum.enable();\r\n           }\r\n           else if(window.web3){\r\n             window.web3=new Web3(window.web3.currentProvider);\r\n           }\r\n           else{\r\n             window.alert(\"System has no MetaMask\");\r\n           }\r\n    }\r\n    const getAccount=async()=>{\r\n\r\n        const web3=window.web3;\r\n        const acc=await web3.eth.getAccounts();\r\n        setAccount(acc[0]);\r\n         console.log(acc);\r\n        const networkId=await web3.eth.net.getId();\r\n        // Loading Tether\r\n        const tetherData= Tether.networks[networkId];\r\n        if(tetherData){\r\n            const teth=new web3.eth.Contract(Tether.abi,tetherData.address); \r\n            setTether(teth);\r\n            let tetherBal=await teth.methods.balances(acc[0]).call();\r\n            setTetherBal(tetherBal);\r\n        }\r\n        else{\r\n            window.alert(\"contract not deployed\");\r\n        }\r\n        //Loading RWD\r\n        const rwdData=RWD.networks[networkId];\r\n        if(rwdData){\r\n            const rwd=new web3.eth.Contract(RWD.abi,rwdData.address);\r\n            setRwd(rwd);\r\n            let rwdBal=await rwd.methods.balances(acc[0]).call();\r\n            setRwdBal(rwdBal);\r\n            console.log(rwdBal.toString());\r\n        }\r\n        else{\r\n            window.alert(\"RWD not deployed\");\r\n        }\r\n        //Loading DecentralBank\r\n        const DecentralBankData=DecentralBank.networks[networkId];\r\n        if(DecentralBankData){\r\n            const decentralBank=new web3.eth.Contract(DecentralBank.abi,DecentralBankData.address);\r\n            setDecentralBank(decentralBank);\r\n            let stackingBal=await decentralBank.methods.stackingBalance(acc[0]).call();\r\n            setStackingBal(stackingBal);\r\n            console.log(stackingBal);\r\n        }\r\n        else{\r\n            window.alert(\"DecentralBank not deployed\");\r\n        }\r\n    }\r\n    useEffect(async()=>{\r\n      await loadWeb3();\r\n      await getAccount();\r\n      setTimeout(function() {\r\n          setLoading(false);\r\n      }, 5000);\r\n   \r\n    },[])\r\n    const stake=async(amount)=>{\r\n      loading(true);\r\n   await tether.methods.approve(decentralBank._address,amount).send({from:account}).on('transactionHash',async(hash)=>{\r\n    await decentralBank.methods.depositTokens(amount).send({from:account}).on('transactionHash',(hash)=>{\r\n      loading(false);\r\n    })\r\n   })\r\n   \r\n    }\r\nreturn(\r\n    <div>\r\n      {loading?(<Loader/>):(<>\r\n        <div  className=\"App\" style={{ position: 'relative'}}>\r\n        <div style={{ position: 'absolute'}}>\r\n        <ParticleSettings />\r\n        </div>\r\n        <main role=\"main\" style={{ maxWidth: '100%',minHeight: '100vm'}}>\r\n              <div>\r\n                <Main account={account} stackingBalance={stackingBalance} rwdBalance={rwdBalance} tetherBalance={tetherBalance} stake={stake}/>\r\n              </div>\r\n            </main>\r\n        </div>\r\n      </>)}\r\n    </div>\r\n)\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}